# Copyright 2018 QuantInsti Quantitative Learnings Pvt Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
"""
Created on Wed Jan  9 10:17:29 2019

@author: prodipta
"""
from collections import OrderedDict
#import empyrical
#import bottleneck

class Blotter(object):
    '''
        Blotter tracks the order generated by the algo and matches them
        from the order status received from the broker API. It also computes
        the positions that should arise out of those algo orders and matches
        against the positions from broker API. Cumulative sum of the realized
        and unrealized pnls from these positions are algo pnl. This helps us
        avoid computing algo performance solely based on account information,
        as the account can also be affected by other means (manual trades or
        capital withdrawals etc.).
    '''
    def __init__(self):
        self._orders = OrderedDict([])
        self._positions = {}
        
    def _position_from_orders(self):
        pass
    
    def pnls_from_positions(self):
        pass
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    